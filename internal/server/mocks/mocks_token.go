// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	token "github.com/PaulYakow/gophkeeper/internal/utils/token"
	gomock "github.com/golang/mock/gomock"
)

// MockIMaker is a mock of IMaker interface.
type MockIMaker struct {
	ctrl     *gomock.Controller
	recorder *MockIMakerMockRecorder
}

// MockIMakerMockRecorder is the mock recorder for MockIMaker.
type MockIMakerMockRecorder struct {
	mock *MockIMaker
}

// NewMockIMaker creates a new mock instance.
func NewMockIMaker(ctrl *gomock.Controller) *MockIMaker {
	mock := &MockIMaker{ctrl: ctrl}
	mock.recorder = &MockIMakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMaker) EXPECT() *MockIMakerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIMaker) Create(userID int, duration time.Duration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", userID, duration)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIMakerMockRecorder) Create(userID, duration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIMaker)(nil).Create), userID, duration)
}

// Verify mocks base method.
func (m *MockIMaker) Verify(in string) (*token.Payload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", in)
	ret0, _ := ret[0].(*token.Payload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *MockIMakerMockRecorder) Verify(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockIMaker)(nil).Verify), in)
}
